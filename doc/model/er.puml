@startuml

class Simulator {
    run()
    abort()
}

class Memory<N> {
    data: [u8; N]
}

class Processor {

}

class Clock {
    tick()
}

class SIO {
    '  returns a value of 0 when read by core 0, and 1 when read by core 1
    cpuid: bool,
    ' If both cores try to claim the same lock on the same clock cycle, core 0 succeeds.
    spinlock: u32
    ' can only be written by core 0 and read by core 1
    mailbox_0: [u32; 4]
    '  can only be written by core 1 and read by core 0
    mailbox_1: [u32; 4]

    ' The doorbell registers raise an interrupt on the opposite core
    doorbell_0: u8
    doorbell_1: u8
    risc_v_platform_timer: u64
}


' Chapter 3.1.3
' • all user GPIOs (GPIOs 0 through 29, or 0 through 47, depending on package option)
' • QSPI pins
' • USB DP/DM pins
class GPIO {

}

' Chapter 3.1.10
' Each core is equipped with two interpolators
class Interpolator {

}

' Chapter 3.1.9???
class TMDSEncoder {

}

' Chapter 3.8.1.3
' The RISC-V architecture
class Hazard3 {
    pc: u32
    ' at index 0 is hardwired to zero, ignores writes
    registers: [u32; 32]
    local_monitor: bool
    privilege: {User, Machine}
}


Memory "1" --> "1" Simulator: "ROM <32kB>"
Memory "1" --> "1" Simulator: "SRAM <512kB>"
Memory "1" --> "1" Simulator: "Boot RAM <1kB>"
Clock --> Simulator

Memory --> Class03

GPIO --> SIO

@enduml
